function data = checkerboard(dParams)    
%% User parameters
fnames = fieldnames(dParams);
for i = 1:length(fnames)
    eval([fnames{i}, '=getfield(dParams,fnames{i});']);
end
repeats=10;                 % Number of times to alternate checkerboard
altPeriod=2;                % Period of checkerboard alternations (Sec)
numChecks=8;                % Number of squares in checkerboard (vertical dimension)
blankTime=2;                % Length of blank frames before stimulus (in seconds)

% Save data
data.stimType='checkerboard';
data.blankTime=blankTime;
data.period=altPeriod;
data.repeats=repeats;

%% Make textures
% Create checkerboard template
squareLength=floor(y_pixel/numChecks);
numChecks_horizontal=floor(x_pixel/squareLength);
line1=[]; line2=[]; template=[];
for x=1:numChecks_horizontal
    line1=[line1 ones(squareLength)*wht*rem(x,2)];
    line2=[line2 ones(squareLength)*wht*rem(x+1,2)];
end
for y=1:numChecks
    eval(['template=[template; line' num2str(rem(y,2)+1) '];'])
end

% Make blank texture
tex(1)=Screen('MakeTexture',win,gry); 

% Make stim textures
tex(2)=Screen('MakeTexture',win,template);
template(template==blk)=-1;
template(template==wht)=blk;
template(template==-1)=wht;
tex(3)=Screen('MakeTexture',win,template); % alternated checkerboard

%% Frame indices and durations
% tex2 followed by tex3
frameIndices = [2*ones(1,fr_rate*altPeriod), 3*ones(1,fr_rate*altPeriod)];
% repeat X times
frameIndices = repmat(frameIndices,1,round(repeats/2));
% add blank time to beginning
frameIndices = [ones(1, fr_rate*blankTime), frameIndices];

nframes = length(frameIndices);

% Correct using measured ifi
rem_int = waitframes*ifi/(waitframes*ifi-1/fr_rate); % number frames before half extra frame
rem_frames = round(abs(rem_int)*(0.5:floor(nframes/abs(rem_int)-0.5)+0.5));
data.rem_int = rem_int;
data.rem_frames = rem_frames;
newIndices = 1:nframes;
if rem_int > 0  % delete extra frames (30Hz is too high)
    newIndices(rem_frames) = [];    
else % add frames (30Hz is too low)    
    for i = 1:length(rem_frames)
        newIndices(rem_frames(i)+i-1) = rem_frames(i)-1;        
        newIndices(rem_frames(i)+i:end+1) = rem_frames(i):nframes;        
    end
end 
nframes = length(newIndices);

frameIndices = frameIndices(newIndices);
nframes = length(frameIndices);

%% Animation
disp('Press any key to begin trial')
Screen('TextSize', win, 24);
Screen('DrawText', win, 'Press any key to begin trial', 10, 10, 255);
Screen('Flip', win);

KbPressWait;    % Wait for key press
KbReleaseWait;

flips = zeros(1,nframes);
lastFrame = 1;
times = zeros(1,repeats+1);
counter = 2;

vbl = Screen('Flip', win);
vbl0 = vbl;

for i = 1:nframes
    Screen('DrawTexture', win, tex(frameIndices(i)));
    Screen('DrawingFinished', win); 
    
    % was previously drawn frame same as this frame?
    if (lastFrame ~= frameIndices(i)) % last flip of each stimulus
        times(counter) = 1000*(vbl - vbl0);
        counter=counter+1;
    end
    lastFrame = frameIndices(i);    
    flips(i) = 1000*(vbl-vbl0);
    
    vbl = Screen('Flip', win, vbl + (waitframes - 0.5) * ifi);
end
times(counter) = 1000*(vbl - vbl0);

data.flips = flips;
data.times = times;
return
